name: Terraform CI

#on:
#  pull_request:
#    branches: [ "main" ]

run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init
       
    - name: Terraform Validate
      run: terraform validate

    - uses: terraform-linters/setup-tflint@v3
      with:
        tflint_version: latest
   
    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact

    - name: Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        framework: terraform
   
    - name: Terraform Plan
      run: terraform plan
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image to Amazon ECR
      id: build-image
      uses: docker/build-push-action@v6
      with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest
          platforms: linux/amd64

     - name: Download task definition
       run: |
          aws ecs describe-task-definition --task-definition ${{ vars.TASK_DEF }} --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ vars.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ vars.ECS_SERVICE }}
          cluster: ${{ vars.ECS_CLUSTER }}
          wait-for-service-stability: true
