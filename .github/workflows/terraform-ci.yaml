name: Terraform CI

on: [push]
jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init
       
    - name: Terraform Validate
      run: terraform validate
   
    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve
      
    - name: Get Terraform Outputs
      id: terraform-outputs
      run: |
        echo "ecr_repository=$(terraform output -raw ecr_repository_name)" >> $GITHUB_OUTPUT
        echo "task_def=$(terraform output -raw task_definition_family)" >> $GITHUB_OUTPUT
        echo "container_name=$(terraform output -raw container_name)" >> $GITHUB_OUTPUT
        echo "ecs_service=$(terraform output -raw ecs_service_name)" >> $GITHUB_OUTPUT
        echo "ecs_cluster=$(terraform output -raw ecs_cluster_name)" >> $GITHUB_OUTPUT

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image to Amazon ECR
      id: build-image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ steps.terraform-outputs.outputs.ecr_repository }}:${{ github.sha }}
          ${{ steps.login-ecr.outputs.registry }}/${{ steps.terraform-outputs.outputs.ecr_repository }}:latest
        platforms: linux/amd64

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ steps.terraform-outputs.outputs.task_def }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ steps.terraform-outputs.outputs.container_name }}
        image: ${{ steps.login-ecr.outputs.registry }}/${{ steps.terraform-outputs.outputs.ecr_repository }}:${{ github.sha }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ steps.terraform-outputs.outputs.ecs_service }}
        cluster: ${{ steps.terraform-outputs.outputs.ecs_cluster }}
        wait-for-service-stability: true
